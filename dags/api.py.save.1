import os
import requests
from airflow import DAG
from airflow.operators.http_operator import HttpSensor
from airflow.operators.python_operator import PythonOperator
from airflow.operators.bash_operator import BashOperator
from datetime import datetime, timedelta

# Define the DAG
dag = DAG(
    dag_id='get_file_from_endpoint',
    start_date=datetime(2023, 3, 12),
    schedule_interval='@daily',
    catchup=False,
)

# Define a Python function to download the file
def download_file():
    url = 'https://api.golemio.cz/v2/parking/measurements'
    response = requests.get(url, stream=True)
    with open('/tmp/measurements.csv', 'wb') as f:
        for chunk in response.iter_content(chunk_size=1024):
            if chunk:
                f.write(chunk)

def download_file():
    url = 'https://api.golemio.cz/v2/parking/measurements'
    response = requests.get(url, stream=True)
    with open('/tmp/measurements.csv', 'wb') as f:
        for chunk in response.iter_content(chunk_size=1024):
            if chunk:
                f.write(chunk)

# Define a task to download the file
download_file_task = PythonOperator(
    task_id='download_file',
    python_callable=download_file,
    dag=dag,
)

# Define a task to move the file to another directory
move_file_task = BashOperator(
    task_id='move_file',
    bash_command='mv /tmp/myfile.csv /mnt/myfiles/',
    dag=dag,
)

# Set task dependencies
check_endpoint >> download_file_task >> move_file_task
